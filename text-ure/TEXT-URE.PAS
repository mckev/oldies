USES CRT,DOS,VGACAD;
CONST LEBAR=2;
      NAMA='T2B';
VAR R : REGISTERS;
    N : ARRAY [0..255,1..16] OF BYTE;
    NILAI : ARRAY [0..255,1..2] OF BYTE; (* Skala keteduhan tiap karakter *)
    PROCESS : POINTER;
    PAL:ARRAY [0..255] OF BYTE;   (* Rata-rata nilai palette *)

    F : TEXT;

PROCEDURE AMBIL_BTK(NO : BYTE);
VAR  OFFSET,SEGMEN : WORD;
     V1            : WORD;
     LETAK         : WORD;
BEGIN
    R.AH:=$11;
    R.AL:=$30;
    R.BH:=6;
    INTR($10,R);
    FOR V1 := 1 TO 16 DO
       BEGIN
       LETAK := R.BP + NO*16 + V1 - 1;
       N[NO][V1] := MEM[R.ES:LETAK];
    END;
END;

PROCEDURE DISPLAY (B:BYTE);
VAR I,J : BYTE;
BEGIN
   FOR I:=1 TO 16 DO
      BEGIN
      FOR J:=8 DOWNTO 1 DO
         IF (N[B,I] SHR (J-1)) AND 1 = 1 THEN WRITE ('Û') ELSE WRITE (' ');
      WRITELN;
   END;
END;

PROCEDURE PENILAIAN (B:BYTE);
VAR I,J : BYTE;
    RESULT : WORD;
BEGIN
   (* NILAI SEBUAH KARAKTER KE 255 SKALA KETEDUHAN *)
   (* SATU NILAI UNTUK BAGIAN ATAS DAN SATU NILAI LAGI UNTUK BAGIAN BAWAH *)
   RESULT := 0;
   FOR I:=1 TO 8 DO
      FOR J:=8 DOWNTO 1 DO
         IF (N[B,I] SHR (J-1)) AND 1 = 1 THEN INC (RESULT);
   NILAI [B,1] := RESULT*255 DIV 64;
   RESULT := 0;
   FOR I:=9 TO 16 DO
      FOR J:=8 DOWNTO 1 DO
         IF (N[B,I] SHR (J-1)) AND 1 = 1 THEN INC (RESULT);
   NILAI [B,2] := RESULT*255 DIV 64;
END;

PROCEDURE PENILAIAN_GAMBAR (VAR PICBUFF);
VAR I : WORD;
BEGIN
   FOR I:=0 TO 255 DO
      PAL [I] := ROUND((DEFAULT_PAL^[I].R+DEFAULT_PAL^[I].G+DEFAULT_PAL^[I].B) * 4 / 3);
   FOR I:=0 TO 64000-1 DO
      MEM[SEG(PICBUFF):OFS(PICBUFF)+I]:=PAL [MEM[SEG(PICBUFF):OFS(PICBUFF)+I]];
END;

FUNCTION NILAI_BLOCK_GAMBAR (Var PicBuff; X1,Y1,X2,Y2 : Integer) : BYTE;
VAR HASIL : LONGINT;
    I,J : INTEGER;
BEGIN
   HASIL:=0;
   FOR I:=Y1 TO Y2 DO
      FOR J:=X1 TO X2 DO
         INC (HASIL,MEM[SEG(PICBUFF):OFS(PICBUFF)+I*320+J]);
   HASIL := HASIL DIV ((Y2-Y1+1)*(X2-X1+1));
   NILAI_BLOCK_GAMBAR := HASIL;
END;

FUNCTION CALCULATE (VAR PICBUFF;X,Y:INTEGER) : BYTE;
VAR I,J,K,RESULT:BYTE;
    JUM_RESULT:WORD;
BEGIN
   I:=NILAI_BLOCK_GAMBAR (PICBUFF,X,Y,X+LEBAR-1,Y+LEBAR-1);
   J:=NILAI_BLOCK_GAMBAR (PICBUFF,X,Y+LEBAR,X+LEBAR-1,Y+2*LEBAR-1);
   JUM_RESULT := 65535;
   FOR K:=32 TO 254 DO
      IF (ABS(I-NILAI[K,1])+ABS(J-NILAI[K,2])<JUM_RESULT) THEN
         BEGIN
         RESULT:=K;
         JUM_RESULT := (ABS(I-NILAI[K,1])+ABS(J-NILAI[K,2]));
   END;
   CALCULATE := RESULT;
END;

VAR I,J : WORD;
BEGIN
   CLRSCR;
   (* BERI PENILAIAN SETIAP KARAKTER *)
   FOR I:=0 TO 255 DO
      BEGIN
      AMBIL_BTK (I);
      PENILAIAN (I);
   END;
   DEFINE_PAGE (PROCESS);

   OPENVGA256;
   INSTALL_PALETTE (NAMA+'.PAL');
   LOAD_PICTURE (NAMA+'.PIC',PROCESS^);
   MOVETO (PROCESS^,SCREEN^);

   (* BERI PENILAIAN SETIAP PIXEL *)
   PENILAIAN_GAMBAR (PROCESS^);

   I:=0;
   ASSIGN (F,'OUTPUT.TXT');
   REWRITE (F);
   WHILE (I<200) DO
      BEGIN
      J:=0;
      WHILE (J<320) DO
         BEGIN
         WRITE (F,CHR(CALCULATE (PROCESS^,J,I)));
         INC (J,LEBAR);
      END;
      INC (I,LEBAR*2);
      WRITELN (F);
   END;
   CLOSE (F);
   CLOSEVGA256;
END.